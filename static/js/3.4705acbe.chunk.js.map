{"version":3,"sources":["Components/Person/PersonFilms/PersonFilms.module.scss","Components/Person/PersonFilms/PersonFilms.jsx"],"names":["module","exports","PersonFilms","films","useState","filmsName","setFilmsName","useEffect","a","filmsHTTPS","map","url","changeHTTP","makeConcurrentRequest","response","className","style","container","list__wrapper","sort","b","episode_id","title","list__item","item__episode","item__col","item__title"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,UAAY,+BAA+B,cAAgB,mCAAmC,WAAa,gCAAgC,cAAgB,mCAAmC,UAAY,+BAA+B,YAAc,mC,iHCqC1PC,UAjCK,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEnB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAUA,OARAC,qBAAU,WACN,sBAAC,8BAAAC,EAAA,6DACSC,EAAaN,EAAMO,KAAI,SAAAC,GAAG,OAAIC,YAAWD,MADlD,SAE0BE,YAAsBJ,GAFhD,OAESK,EAFT,OAGGR,EAAaQ,GAHhB,0CAAD,KAKD,IAGC,qBAAKC,UAAWC,IAAMC,UAAtB,SACI,oBAAIF,UAAWC,IAAME,cAArB,SACKb,EACAc,MAAK,SAACX,EAAEY,GAAH,OAASZ,EAAEa,WAAaD,EAAEC,cAC/BX,KAAI,gBAAGY,EAAH,EAAGA,MAAOD,EAAV,EAAUA,WAAV,OACL,qBAAqBN,UAAWC,IAAMO,WAAtC,UACI,uBAAMR,UAAWC,IAAMQ,cAAvB,sBAAgDH,KAChD,sBAAMN,UAAWC,IAAMS,UAAvB,eACA,sBAAMV,UAAWC,IAAMU,YAAvB,SAAqCJ,MAHhCD","file":"static/js/3.4705acbe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PersonFilms_container__2Dwi3\",\"list__wrapper\":\"PersonFilms_list__wrapper__3C19A\",\"list__item\":\"PersonFilms_list__item__QLtDU\",\"item__episode\":\"PersonFilms_item__episode__3fui5\",\"item__col\":\"PersonFilms_item__col__1bOPl\",\"item__title\":\"PersonFilms_item__title__3GDX6\"};","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport style from './PersonFilms.module.scss'\nimport { changeHTTP, makeConcurrentRequest } from '../../../network/api'\n\nconst PersonFilms = ({ films }) => {\n\n    const [filmsName, setFilmsName] = useState([])\n\n    useEffect(() => {\n        (async () => {\n            const filmsHTTPS = films.map(url => changeHTTP(url))\n            const response = await makeConcurrentRequest(filmsHTTPS)\n            setFilmsName(response)\n        })()    \n    }, [])\n\n    return (\n        <div className={style.container}>\n            <ul className={style.list__wrapper}>\n                {filmsName\n                .sort((a,b) => a.episode_id - b.episode_id)\n                .map(({ title, episode_id }) => (\n                <li key={episode_id} className={style.list__item}>\n                    <span className={style.item__episode}>Episode: {episode_id}</span>\n                    <span className={style.item__col}>:</span>\n                    <span className={style.item__title}>{title}</span>\n                </li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nPersonFilms.propTypes = {\n    films: PropTypes.array\n}\n\nexport default PersonFilms"],"sourceRoot":""}